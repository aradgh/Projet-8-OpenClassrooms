name: CI TourGuide

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    # Étape 1 - Cloner le repo
      - name: Checkout code
        uses: actions/checkout@v4
        
    # Étape 2 - Configurer Java 17 + stocker localement les dépendances Maven (~/.m2/repository) pour éviter de les re-télécharger à chaque exécution. 
      - name: Set up Java 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: 17
          cache: maven

    # Étape 3 - Installer les dépendances locales (gpsUtil, RewardCentral, TripPricer)
      - name: Install local JAR dependencies
        run: |
          mvn install:install-file -Dfile=libs/gpsUtil.jar -DgroupId=gpsUtil -DartifactId=gpsUtil -Dversion=1.0.0 -Dpackaging=jar
          mvn install:install-file -Dfile=libs/RewardCentral.jar -DgroupId=rewardCentral -DartifactId=rewardCentral -Dversion=1.0.0 -Dpackaging=jar
          mvn install:install-file -Dfile=libs/TripPricer.jar -DgroupId=tripPricer -DartifactId=tripPricer -Dversion=1.0.0 -Dpackaging=jar

    # Étape 4 - Compilation
      - name: Compile project
        run: mvn compile

    # Étape 5 - Tests 
    # Pour désactiver les tests de performances pour gagner du temps, remplacez "mvn test" par
    # mvn test -Dtest=!com.openclassrooms.tourguide.TestPerformance
      - name: Run unit tests
        run: mvn test

    # Étape 6 - Build des artefacts
    # Ici, on skip les tests car ils sont déjà exécuté dans la commande précédente mvn test
    # Pour réactiver les tests de performances, enlever -DskipTests
      - name: Package the project
        run: mvn package -DskipTests

    # Étape 7 - Stocker l'artefact JAR/WAR pour téléchargement
      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: build-artifact
          path: target/*.jar
